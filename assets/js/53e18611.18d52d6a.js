"use strict";(self.webpackChunkmsamp_website=self.webpackChunkmsamp_website||[]).push([[349],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1922:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={id:"introduction"},c="Introduction",s={unversionedId:"introduction",id:"introduction",isDocsHomePage:!1,title:"Introduction",description:"Features",source:"@site/../docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/MS-AMP/docs/introduction",editUrl:"https://github.com/azure/MS-AMP/edit/main/website/../docs/introduction.md",version:"current",frontMatter:{id:"introduction"},sidebar:"docs",next:{title:"Installation",permalink:"/MS-AMP/docs/getting-started/installation"}},p=[{value:"Features",id:"features",children:[]},{value:"Performance",id:"performance",children:[{value:"Model performance",id:"model-performance",children:[]},{value:"System performance",id:"system-performance",children:[]}]}],u={toc:p};function m(e){var t=e.components,l=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"MS-AMP")," is an automatic mixed precision package for deep learning developed by Microsoft."),(0,o.kt)("p",null,"Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Support O1 optimization: Apply FP8 to weights and weight gradients and support FP8 in communication."),(0,o.kt)("li",{parentName:"ul"},"Support O2 optimization: Support FP8 for two optimizers(Adam and AdamW)."),(0,o.kt)("li",{parentName:"ul"},"Support O3 optimization: Support FP8 for distributed parallel training and ZeRO optimizer, which is essential for training large scale model."),(0,o.kt)("li",{parentName:"ul"},"Provide four training examples applying MS-AMP: Swin-Transformer, DeiT, RoBERTa and GPT-3.")),(0,o.kt)("p",null,"MS-AMP has the following benefit comparing with Transformer Engine:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Speed up memory-limited operations by accessing one byte compared to half or single-precision."),(0,o.kt)("li",{parentName:"ul"},"Reduce memory requirements for training models, enabling larger models."),(0,o.kt)("li",{parentName:"ul"},"Speed up communication for distributed model by transmitting lower precision gradients."),(0,o.kt)("li",{parentName:"ul"},"Reduce training time for large language models with larger minibatches.")),(0,o.kt)("h2",{id:"performance"},"Performance"),(0,o.kt)("h3",{id:"model-performance"},"Model performance"),(0,o.kt)("p",null,"We evaluated the training loss and validation performance of four typical models, GPT-3, Swin-Transformer, DeiT and RoBERTa, using both MS-AMP and FP16/BF16 AMP. Our observations show that the models trained with MS-AMP achieved comparable performance to those trained using FP16/BF16 AMP. This demonstrates the effectiveness of the mixed FP8 in MS-AMP."),(0,o.kt)("p",null,"Here are the results for GPT-3, Swin-T, DeiT-S and RoBERTa-B."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(3991).Z})),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image",src:n(5507).Z})),(0,o.kt)("h3",{id:"system-performance"},"System performance"),(0,o.kt)("p",null,"MS-AMP preserves high-precision's accuracy while using only a fraction of the memory footprint on a range of tasks, including GPT-3, DeiT and Swin Transformer. For example, when training GPT-175B on NVIDIA H100 platform, MS-AMP achieves a notable 39% reduction in real memory usage compared with BF16 mixed-precision approach and reduces training time by 37% compared with Transformer Engine. For small models, MS-AMP with O2 mode can achieve 44% memory saving for Swin-1.0B and 26% memory saving for ViT-1.2B, comparing with FP16 AMP."),(0,o.kt)("p",null,"Here are the resuls for GPT-3:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Image",src:n(9925).Z})),(0,o.kt)("p",null,"Here, TP, PP, and DP represent tensor, pipeline, and data parallelism respectively. BS indicates batch size, while MFU denotes model FLOPs utilization. Weight-related communication contains the all-gather operator on weights and the reduce-scatter operator on weight gradients."),(0,o.kt)("p",null,"Here are the results for Swin-1.0B and ViT-1.2B."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Image",src:n(5059).Z})),(0,o.kt)("p",null,"For detailed setting and results, please go to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/MS-AMP-Examples"},"MS-AMP-Example"),"."))}m.isMDXComponent=!0},3991:function(e,t,n){t.Z=n.p+"assets/images/gpt-loss-12c833436f04f87c8091aa40e8214c81.png"},9925:function(e,t,n){t.Z=n.p+"assets/images/gpt-performance-6ad54753eb117d15e155b4de69d5d788.png"},5059:function(e,t,n){t.Z=n.p+"assets/images/gpu-memory-4b547791bf85e361ddd5b1f1c3f83892.png"},5507:function(e,t,n){t.Z=n.p+"assets/images/performance-8f0205e5a059a0ceb269eed72b673b0f.png"}}]);
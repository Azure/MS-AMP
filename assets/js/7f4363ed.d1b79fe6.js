"use strict";(self.webpackChunkmsamp_website=self.webpackChunkmsamp_website||[]).push([[545],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:i},t)}},1395:function(e,t,n){n.d(t,{Z:function(){return u}});var a=n(7294),i=n(944),r=n(6010),l="tabItem_vU9c",o="tabItemActive_cw6a";var s=37,c=39;var u=function(e){var t=e.lazy,n=e.block,u=e.defaultValue,d=e.values,p=e.groupId,m=e.className,h=(0,i.Z)(),g=h.tabGroupChoices,b=h.setTabGroupChoices,k=(0,a.useState)(u),v=k[0],f=k[1],N=a.Children.toArray(e.children),y=[];if(null!=p){var _=g[p];null!=_&&_!==v&&d.some((function(e){return e.value===_}))&&f(_)}var C=function(e){var t=e.currentTarget,n=y.indexOf(t),a=d[n].value;f(a),null!=p&&(b(p,a),setTimeout((function(){var e,n,a,i,r,l,s,c;(e=t.getBoundingClientRect(),n=e.top,a=e.left,i=e.bottom,r=e.right,l=window,s=l.innerHeight,c=l.innerWidth,n>=0&&r<=c&&i<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(o),setTimeout((function(){return t.classList.remove(o)}),2e3))}),150))},M=function(e){var t,n;switch(e.keyCode){case c:var a=y.indexOf(e.target)+1;n=y[a]||y[0];break;case s:var i=y.indexOf(e.target)-1;n=y[i]||y[y.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:v===t?0:-1,"aria-selected":v===t,className:(0,r.Z)("tabs__item",l,{"tabs__item--active":v===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:M,onFocus:C,onClick:C},n)}))),t?(0,a.cloneElement)(N.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},1378:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=(n(1395),n(8215),["components"]),o={id:"installation"},s="Installation",c={unversionedId:"getting-started/installation",id:"getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"Requirements",source:"@site/../docs/getting-started/installation.mdx",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/MS-AMP/docs/getting-started/installation",editUrl:"https://github.com/azure/MS-AMP/edit/main/website/../docs/getting-started/installation.mdx",version:"current",frontMatter:{id:"installation"},sidebar:"docs",previous:{title:"Introduction",permalink:"/MS-AMP/docs/introduction"},next:{title:"Run examples",permalink:"/MS-AMP/docs/getting-started/run-msamp"}},u=[{value:"Requirements",id:"requirements",children:[]},{value:"Install MS-AMP",id:"install-ms-amp",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"Here're the system requirements for MS-AMP."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Latest version of Linux, you're highly encouraged to use Ubuntu 18.04 or later."),(0,r.kt)("li",{parentName:"ul"},"Nvidia GPU(e.g. H100/A100) and compatible drivers should be installed correctly."),(0,r.kt)("li",{parentName:"ul"},"Driver version can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"nvidia-smi"),"."),(0,r.kt)("li",{parentName:"ul"},"Python version 3.7 or later (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"python3 --version"),")."),(0,r.kt)("li",{parentName:"ul"},"Pip version 18.0 or later (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"python3 -m pip --version"),")."),(0,r.kt)("li",{parentName:"ul"},"CUDA version 11 or later (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},"nvcc --version"),")."),(0,r.kt)("li",{parentName:"ul"},"PyTorch version 1.14 or later (which can be checked by running ",(0,r.kt)("inlineCode",{parentName:"li"},'python -c "import torch; print(torch.__version__)"'),").")),(0,r.kt)("p",null,"We strongly recommend using ",(0,r.kt)("a",{parentName:"p",href:"https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch"},"PyTorch NGC Container"),". For example, to start PyTorch 2.1 container, run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -it -d --name=msamp --privileged --net=host --ipc=host --gpus=all nvcr.io/nvidia/pytorch:23.04-py3 bash\nsudo docker exec -it msamp bash\n")),(0,r.kt)("h2",{id:"install-ms-amp"},"Install MS-AMP"),(0,r.kt)("p",null,"You can clone the source from GitHub."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/Azure/MS-AMP.git\ncd MS-AMP\ngit submodule update --init --recursive\n")),(0,r.kt)("p",null,"If you want to train model with multiple GPU, you need to install MSCCL to support FP8."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cd third_party/msccl\n\n# A100\nmake -j src.build NVCC_GENCODE="-gencode=arch=compute_80,code=sm_80"\n# H100\nmake -j src.build NVCC_GENCODE="-gencode=arch=compute_90,code=sm_90"\n\napt-get update\napt install build-essential devscripts debhelper fakeroot\nmake pkg.debian.build\ndpkg -i build/pkg/deb/libnccl2_*.deb\ndpkg -i build/pkg/deb/libnccl-dev_2*.deb\n\ncd -\n')),(0,r.kt)("p",null,"Then, you can install MS-AMP from source."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m pip install --upgrade pip\npython3 -m pip install .\nmake postinstall\n")),(0,r.kt)("p",null,"Before using MS-AMP, you need to preload msampfp8 library and it's depdencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'NCCL_LIBRARY=/usr/lib/x86_64-linux-gnu/libnccl.so # Change as needed\nexport LD_PRELOAD="/usr/local/lib/libmsamp_dist.so:${NCCL_LIBRARY}:${LD_PRELOAD}"\n')),(0,r.kt)("p",null,"After that, you can verify the installation by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'python3 -c "import msamp; print(msamp.__version__)"\n')))}p.isMDXComponent=!0}}]);